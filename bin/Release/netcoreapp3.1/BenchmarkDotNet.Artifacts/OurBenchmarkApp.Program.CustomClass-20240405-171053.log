// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa
// command took 1.22 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa
// command took 13.94 sec and exited with 1
// start dotnet  build -c Release --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa
// command took 1.96 sec and exited with 0
// ***** Done, took 00:00:17 (17.27 sec)   *****
// Found 2 benchmarks:
//   CustomClass.GetDataWithFor: DefaultJob
//   CustomClass.GetDataWithForeach: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: CustomClass.GetDataWithFor: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 52f8ac0d-3051-4332-ada1-7af033b092fa.dll --anonymousPipes 744 1280 --benchmarkName OurBenchmarkApp.Program+CustomClass.GetDataWithFor --job Default --benchmarkId 0 in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.12
// Runtime=.NET Core 3.1.30 (CoreCLR 4.700.22.47601, CoreFX 4.700.22.47602), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 259000.00 ns, 259.0000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.
   at OurBenchmarkApp.Program.CustomClass.PopulateData() in C:\Users\Hp\source\repos\OurBenchmarkApp\Program.cs:line 26
   at OurBenchmarkApp.Program.CustomClass.GetDataWithFor() in C:\Users\Hp\source\repos\OurBenchmarkApp\Program.cs:line 40
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\52f8ac0d-3051-4332-ada1-7af033b092fa.notcs:line 309
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\52f8ac0d-3051-4332-ada1-7af033b092fa.notcs:line 176
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\52f8ac0d-3051-4332-ada1-7af033b092fa.notcs:line 60
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 20996 has exited with code -1.

// ** Remained 1 (50.0%) benchmark(s) to run. Estimated finish 2024-04-05 17:11 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: CustomClass.GetDataWithForeach: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 52f8ac0d-3051-4332-ada1-7af033b092fa.dll --anonymousPipes 1412 1356 --benchmarkName OurBenchmarkApp.Program+CustomClass.GetDataWithForeach --job Default --benchmarkId 1 in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.12
// Runtime=.NET Core 3.1.30 (CoreCLR 4.700.22.47601, CoreFX 4.700.22.47602), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 188000.00 ns, 188.0000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.
   at OurBenchmarkApp.Program.CustomClass.PopulateData() in C:\Users\Hp\source\repos\OurBenchmarkApp\Program.cs:line 26
   at OurBenchmarkApp.Program.CustomClass.GetDataWithForeach() in C:\Users\Hp\source\repos\OurBenchmarkApp\Program.cs:line 52
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\52f8ac0d-3051-4332-ada1-7af033b092fa.notcs:line 501
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\52f8ac0d-3051-4332-ada1-7af033b092fa.notcs:line 368
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\Hp\source\repos\OurBenchmarkApp\bin\Release\netcoreapp3.1\52f8ac0d-3051-4332-ada1-7af033b092fa\52f8ac0d-3051-4332-ada1-7af033b092fa.notcs:line 60
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 29764 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2024-04-05 17:11 (0h 0m from now) **
Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\OurBenchmarkApp.Program.CustomClass-report.csv
  BenchmarkDotNet.Artifacts\results\OurBenchmarkApp.Program.CustomClass-report-github.md
  BenchmarkDotNet.Artifacts\results\OurBenchmarkApp.Program.CustomClass-report.html

// * Detailed results *
CustomClass.GetDataWithFor: DefaultJob
Runtime = .NET Core 3.1.30 (CoreCLR 4.700.22.47601, CoreFX 4.700.22.47602), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

CustomClass.GetDataWithForeach: DefaultJob
Runtime = .NET Core 3.1.30 (CoreCLR 4.700.22.47601, CoreFX 4.700.22.47602), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet v0.13.12, Windows 11 (10.0.22631.3296/23H2/2023Update/SunValley3)
11th Gen Intel Core i5-1135G7 2.40GHz, 1 CPU, 8 logical and 4 physical cores
.NET SDK 7.0.202
  [Host]     : .NET Core 3.1.30 (CoreCLR 4.700.22.47601, CoreFX 4.700.22.47602), X64 RyuJIT AVX2 [AttachedDebugger]
  DefaultJob : .NET Core 3.1.30 (CoreCLR 4.700.22.47601, CoreFX 4.700.22.47602), X64 RyuJIT AVX2


| Method             | Mean | Error | StdDev | Median | Q1 | Q3 |
|------------------- |-----:|------:|-------:|-------:|---:|---:|
| GetDataWithFor     |   NA |    NA |     NA |     NA | NA | NA |
| GetDataWithForeach |   NA |    NA |     NA |     NA | NA | NA |

Benchmarks with issues:
  CustomClass.GetDataWithFor: DefaultJob
  CustomClass.GetDataWithForeach: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
        - 360 Total Security (C:\Program Files (x86)\360\Total Security\safemon\QHSafeTray.exe)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.


// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Median : Value separating the higher half of all measurements (50th percentile)
  Q1     : Quartile 1 (25th percentile)
  Q3     : Quartile 3 (75th percentile)
  1 ns   : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:00 (0.69 sec), executed benchmarks: 2

Global total time: 00:00:18 (18.43 sec), executed benchmarks: 2
// * Artifacts cleanup *
Artifacts cleanup is finished
